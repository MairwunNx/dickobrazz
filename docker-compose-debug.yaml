version: "3.8"

services:
  dickbot:
    container_name: dickbot
    build: { context: ., dockerfile: Dockerfile-debug }
    restart: always
    networks: [ base ]
    ports: [ "10000:10000" ]
    security_opt: [ "seccomp:unconfined" ]
    cap_add: [ SYS_PTRACE ]
    volumes: [ ./data/bots/dickbot:/data ]
    depends_on: [ cache, db ]
    environment:
      DD_DB_HOST: db
    env_file: [ .env ]
    command: /dlv --listen=:10000 --headless=true --api-version=2 --accept-multiclient exec ./dickobot

  cache:
    container_name: dickbot-cache
    image: redis:latest
    restart: always
    networks: [ base ]
    ports: [ "${REDIS_PORT}:${REDIS_PORT}" ]
    volumes: [ ./data/bots/dickbot/redis:/data ]
    command: redis-server --port $REDIS_PORT --loglevel warning --save 20 1 --requirepass $REDIS_PASSWORD
    env_file: [ .env ]

  db:
    container_name: dickbot-db
    image: mongo:latest
    restart: always
    networks: [ base ]
    ports: [ "${MONGO_PORT}:${MONGO_PORT}" ]
    volumes: [ ./data/bots/dickbot/mongo:/data/db ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    command: --port $MONGO_PORT
    env_file: [ .env ]

networks:
  base:
    driver: bridge